//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class SSISEntities : DbContext
{
    public SSISEntities()
        : base("name=SSISEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<CollectionPoint> CollectionPoints { get; set; }
    public DbSet<Department> Departments { get; set; }
    public DbSet<Department_Orders> Department_Orders { get; set; }
    public DbSet<Employee> Employees { get; set; }
    public DbSet<IOU> IOUs { get; set; }
    public DbSet<Product_Disbursement> Product_Disbursement { get; set; }
    public DbSet<Purchase_Order> Purchase_Order { get; set; }
    public DbSet<Purchase_Order_Details> Purchase_Order_Details { get; set; }
    public DbSet<Requisition_Items> Requisition_Items { get; set; }
    public DbSet<Role> Roles { get; set; }
    public DbSet<Security_Question> Security_Question { get; set; }
    public DbSet<Stationery_Catalogue> Stationery_Catalogue { get; set; }
    public DbSet<Stationery_Requisition> Stationery_Requisition { get; set; }
    public DbSet<Supplier> Suppliers { get; set; }
    public DbSet<Supplier_Item> Supplier_Item { get; set; }
    public DbSet<sysdiagram> sysdiagrams { get; set; }
    public DbSet<UserActivation> UserActivations { get; set; }
    public DbSet<User> Users { get; set; }
    public DbSet<Voucher_Request> Voucher_Request { get; set; }
    public DbSet<iou_list_view> iou_list_view { get; set; }
    public DbSet<stationary_requisition_view> stationary_requisition_view { get; set; }

    public virtual ObjectResult<AddtoRetrievel_Result> AddtoRetrievel(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddtoRetrievel_Result>("AddtoRetrievel", idParameter);
    }

    public virtual ObjectResult<AddtoRetrievelnew_Result> AddtoRetrievelnew(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddtoRetrievelnew_Result>("AddtoRetrievelnew", idParameter);
    }

    public virtual ObjectResult<AddtoRetrievelnew1_Result> AddtoRetrievelnew1(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddtoRetrievelnew1_Result>("AddtoRetrievelnew1", idParameter);
    }

    public virtual int AddtoRetrievelnew2(Nullable<int> id, string department_ID, string item_ID, Nullable<System.DateTime> requisition_Date, Nullable<int> requisiton_Quantity)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        var department_IDParameter = department_ID != null ?
            new ObjectParameter("department_ID", department_ID) :
            new ObjectParameter("department_ID", typeof(string));

        var item_IDParameter = item_ID != null ?
            new ObjectParameter("Item_ID", item_ID) :
            new ObjectParameter("Item_ID", typeof(string));

        var requisition_DateParameter = requisition_Date.HasValue ?
            new ObjectParameter("Requisition_Date", requisition_Date) :
            new ObjectParameter("Requisition_Date", typeof(System.DateTime));

        var requisiton_QuantityParameter = requisiton_Quantity.HasValue ?
            new ObjectParameter("Requisiton_Quantity", requisiton_Quantity) :
            new ObjectParameter("Requisiton_Quantity", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddtoRetrievelnew2", idParameter, department_IDParameter, item_IDParameter, requisition_DateParameter, requisiton_QuantityParameter);
    }

    public virtual ObjectResult<AllCategories_Result> AllCategories()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllCategories_Result>("AllCategories");
    }

    public virtual ObjectResult<CategoriesByItemNumber_Result> CategoriesByItemNumber(string item)
    {
        var itemParameter = item != null ?
            new ObjectParameter("item", item) :
            new ObjectParameter("item", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriesByItemNumber_Result>("CategoriesByItemNumber", itemParameter);
    }

    public virtual ObjectResult<CategoriesByName_Result> CategoriesByName(string name)
    {
        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriesByName_Result>("CategoriesByName", nameParameter);
    }

    public virtual ObjectResult<DateComparisonChart_Result> DateComparisonChart(string category, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
    {
        var categoryParameter = category != null ?
            new ObjectParameter("category", category) :
            new ObjectParameter("category", typeof(string));

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("fromdate", fromdate) :
            new ObjectParameter("fromdate", typeof(System.DateTime));

        var todateParameter = todate.HasValue ?
            new ObjectParameter("todate", todate) :
            new ObjectParameter("todate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DateComparisonChart_Result>("DateComparisonChart", categoryParameter, fromdateParameter, todateParameter);
    }

    public virtual ObjectResult<DEMOProcedure_Result> DEMOProcedure()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DEMOProcedure_Result>("DEMOProcedure");
    }

    public virtual ObjectResult<string> Desc_Not_Included(string supplier_ID)
    {
        var supplier_IDParameter = supplier_ID != null ?
            new ObjectParameter("supplier_ID", supplier_ID) :
            new ObjectParameter("supplier_ID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Desc_Not_Included", supplier_IDParameter);
    }

    public virtual ObjectResult<getAllDepartmentNames_Result> getAllDepartmentNames()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllDepartmentNames_Result>("getAllDepartmentNames");
    }

    public virtual ObjectResult<getDisbursementsBydeptID_Result> getDisbursementsBydeptID(string deptID, Nullable<System.DateTime> todayDate)
    {
        var deptIDParameter = deptID != null ?
            new ObjectParameter("DeptID", deptID) :
            new ObjectParameter("DeptID", typeof(string));

        var todayDateParameter = todayDate.HasValue ?
            new ObjectParameter("todayDate", todayDate) :
            new ObjectParameter("todayDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDisbursementsBydeptID_Result>("getDisbursementsBydeptID", deptIDParameter, todayDateParameter);
    }

    public virtual ObjectResult<getEmployeeDetails_Result> getEmployeeDetails(string deptID)
    {
        var deptIDParameter = deptID != null ?
            new ObjectParameter("DeptID", deptID) :
            new ObjectParameter("DeptID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEmployeeDetails_Result>("getEmployeeDetails", deptIDParameter);
    }

    public virtual ObjectResult<GetFavourites_Result> GetFavourites(Nullable<int> employeeid)
    {
        var employeeidParameter = employeeid.HasValue ?
            new ObjectParameter("employeeid", employeeid) :
            new ObjectParameter("employeeid", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFavourites_Result>("GetFavourites", employeeidParameter);
    }

    public virtual ObjectResult<GetOrderItems_Result> GetOrderItems(Nullable<int> orderID)
    {
        var orderIDParameter = orderID.HasValue ?
            new ObjectParameter("OrderID", orderID) :
            new ObjectParameter("OrderID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderItems_Result>("GetOrderItems", orderIDParameter);
    }

    public virtual ObjectResult<GetStationery_Result> GetStationery()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStationery_Result>("GetStationery");
    }

    public virtual ObjectResult<Nullable<int>> Insert_User(string username, string password, string email)
    {
        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));

        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_User", usernameParameter, passwordParameter, emailParameter);
    }

    public virtual ObjectResult<iou_list_Procedure_Result> iou_list_Procedure(string dept)
    {
        var deptParameter = dept != null ?
            new ObjectParameter("dept", dept) :
            new ObjectParameter("dept", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iou_list_Procedure_Result>("iou_list_Procedure", deptParameter);
    }

    public virtual ObjectResult<iou_list_searchProcedure_Result> iou_list_searchProcedure(string dept)
    {
        var deptParameter = dept != null ?
            new ObjectParameter("dept", dept) :
            new ObjectParameter("dept", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iou_list_searchProcedure_Result>("iou_list_searchProcedure", deptParameter);
    }

    public virtual ObjectResult<PendingRequestDetails_Mobile_Result> PendingRequestDetails_Mobile(Nullable<int> requisitionid)
    {
        var requisitionidParameter = requisitionid.HasValue ?
            new ObjectParameter("requisitionid", requisitionid) :
            new ObjectParameter("requisitionid", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PendingRequestDetails_Mobile_Result>("PendingRequestDetails_Mobile", requisitionidParameter);
    }

    public virtual ObjectResult<PendingRequestsProcedure_Result> PendingRequestsProcedure(Nullable<int> employeeid)
    {
        var employeeidParameter = employeeid.HasValue ?
            new ObjectParameter("employeeid", employeeid) :
            new ObjectParameter("employeeid", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PendingRequestsProcedure_Result>("PendingRequestsProcedure", employeeidParameter);
    }

    public virtual ObjectResult<string> Rank_Details(Nullable<int> rank)
    {
        var rankParameter = rank.HasValue ?
            new ObjectParameter("Rank", rank) :
            new ObjectParameter("Rank", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Rank_Details", rankParameter);
    }

    public virtual ObjectResult<RetrievalList_Result> RetrievalList()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievalList_Result>("RetrievalList");
    }

    public virtual ObjectResult<RetrievalListDetails_Result> RetrievalListDetails(string itemName)
    {
        var itemNameParameter = itemName != null ?
            new ObjectParameter("itemName", itemName) :
            new ObjectParameter("itemName", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievalListDetails_Result>("RetrievalListDetails", itemNameParameter);
    }

    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }

    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }

    public virtual int sp_upgraddiagrams()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }

    public virtual ObjectResult<stationary_requisition_Procedure_Result> stationary_requisition_Procedure(string dept)
    {
        var deptParameter = dept != null ?
            new ObjectParameter("dept", dept) :
            new ObjectParameter("dept", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stationary_requisition_Procedure_Result>("stationary_requisition_Procedure", deptParameter);
    }

    public virtual ObjectResult<stationary_requisition_searchProcedure_Result> stationary_requisition_searchProcedure(string username, string dept)
    {
        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));

        var deptParameter = dept != null ?
            new ObjectParameter("dept", dept) :
            new ObjectParameter("dept", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stationary_requisition_searchProcedure_Result>("stationary_requisition_searchProcedure", usernameParameter, deptParameter);
    }

    public virtual ObjectResult<stationary_requisition_searchProcedure1_Result> stationary_requisition_searchProcedure1(string username)
    {
        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stationary_requisition_searchProcedure1_Result>("stationary_requisition_searchProcedure1", usernameParameter);
    }

    public virtual ObjectResult<StationeryForm_Result> StationeryForm()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StationeryForm_Result>("StationeryForm");
    }

    public virtual ObjectResult<StationeryRequestDetails_Result> StationeryRequestDetails(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StationeryRequestDetails_Result>("StationeryRequestDetails", idParameter);
    }

    public virtual ObjectResult<Store_GetDisbursementList_Result> Store_GetDisbursementList(string deptId)
    {
        var deptIdParameter = deptId != null ?
            new ObjectParameter("deptId", deptId) :
            new ObjectParameter("deptId", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Store_GetDisbursementList_Result>("Store_GetDisbursementList", deptIdParameter);
    }

    public virtual ObjectResult<Supplier_Details_Result> Supplier_Details(string supplierdesc)
    {
        var supplierdescParameter = supplierdesc != null ?
            new ObjectParameter("supplierdesc", supplierdesc) :
            new ObjectParameter("supplierdesc", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplier_Details_Result>("Supplier_Details", supplierdescParameter);
    }

    public virtual int updateRetrievalList(Nullable<int> department_Orders_ID, Nullable<int> fulfilled_Quantity)
    {
        var department_Orders_IDParameter = department_Orders_ID.HasValue ?
            new ObjectParameter("Department_Orders_ID", department_Orders_ID) :
            new ObjectParameter("Department_Orders_ID", typeof(int));

        var fulfilled_QuantityParameter = fulfilled_Quantity.HasValue ?
            new ObjectParameter("Fulfilled_Quantity", fulfilled_Quantity) :
            new ObjectParameter("Fulfilled_Quantity", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateRetrievalList", department_Orders_IDParameter, fulfilled_QuantityParameter);
    }

    public virtual int UpdateStatus(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStatus", idParameter);
    }

    public virtual ObjectResult<Validate_User_Result> Validate_User(string username, string password)
    {
        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Validate_User_Result>("Validate_User", usernameParameter, passwordParameter);
    }
}
